[tool.poetry]
name = "language-quiz-service"
version = "0.0.1"
description = ""
authors = [ "Alex Beverage" ]
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.3"
asyncclick = "^8.1.7.2"
asyncpg = "^0.30.0"
backoff = "^2.2.1"
fastapi = "^0.116.0"
greenlet = "^3.0.3"
openai = "^1.86.0"
pydantic = "^2.9.0"
pydantic-settings = "^2.10.0"

supabase = "^2.10.0"
uvicorn = "^0.30.3"
boto3 = "^1.38.22"
rich = "^14.0.0"
slowapi = "^0.1.9"
bcrypt = "^4.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
ruff = "^0.4.8"
pip-audit = "^2.9.0"

[tool.poetry.scripts]
lqs = "src.cli.console:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "unit: Pure unit tests with mocked dependencies - fast execution",
    "integration: Integration tests with component interactions - mocked external services",
    "functional: API functional tests that can be run with or without authentication",
    "acceptance: End-to-end acceptance tests - full workflows",
    "security: Security-focused tests - authentication, authorization, validation",
]
filterwarnings = [
    # Ignore external dependency warnings we cannot control
    "ignore:Please use `import python_multipart` instead:PendingDeprecationWarning:starlette.*",
    "ignore:The 'app' shortcut is now deprecated.*:DeprecationWarning:httpx.*",
    # Ignore Supabase library deprecation warnings (will be fixed in future library versions)
    "ignore:The 'timeout' parameter is deprecated.*:DeprecationWarning:supabase.*",
    "ignore:The 'verify' parameter is deprecated.*:DeprecationWarning:supabase.*",
    # Ignore async mock warnings from test infrastructure
    "ignore:coroutine 'AsyncMockMixin._execute_mock_call' was never awaited:RuntimeWarning",
]
asyncio_mode = "auto"
pythonpath = "."

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "src/cli/ai/*",
    "src/cli/cli/*",
    "src/cli/cloud/*",
    "src/cli/config/*",
    "src/cli/database/*",
    "src/cli/sentences/*",
    "src/cli/verbs/*",
    "src/cli/utils/*",
    "src/cli/console.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
